!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.cytoscapeEdgeConnections=t():e.cytoscapeEdgeConnections=t()}(window,function(){return function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}return o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";var n=10,r=!1;function i(e){e?(e("core","addEdge",d),e("core","addEdges",a),e("collection","auxNode",f),e("collection","isAuxNode",p),e("collection","edgeId",g)):console.warn("Can't register cytoscape-edge-connections; Cytoscape not available")}function d(e){if(s(this),!c(e,this))throw Error("edge can't be added to graph as a player does not exist "+JSON.stringify(assoc))}function a(e){var t=this;s(this);var o=0;do{if(e=e.filter(function(e){return!c(e,t)}),++o===n)throw Error("too many add-edges rounds (limit is "+n+")")}while(e.length);console.log(o+" add-edges rounds")}function c(e,t){if(u(e,"source",t)&&u(e,"target",t))return function(e,t){var o=t.source().position(),n=t.target().position(),r=e.add({data:{edgeId:(i=t,Number(i.id())),color:t.data("color")},position:{x:(o.x+n.x)/2,y:(o.y+n.y)/2}});var i;t.data("auxNodeId",r.id())}(t,t.add(e)),!0}function u(e,t,o){var n=e.data[t],r=o.getElementById(n.toString());return!r.empty()&&(r.isEdge()&&(e.data[t]=l(r)),!0)}function s(e){r||(e.on("position","node",function(e){e.target.connectedEdges("edge[color]").forEach(function(e){var t,o=e.midpoint();t=o,Number.isNaN(t.x)||Number.isNaN(t.y)||e.auxNode().position(o)})}),e.on("remove","edge[color]",function(e){e.target.auxNode().remove()}),r=!0)}function f(){if(!this||!this.isEdge())throw Error("auxNode() is expected to be called on an edge, but called on "+JSON.stringify(this));var e=this.cy().getElementById(l(this));if(1!==e.size())throw Error("no aux node for edge "+this.id());return e}function l(e){var t=e.data("auxNodeId");if(!t)throw Error("edge "+e.id()+' has no "auxNodeId" data');return t}function p(){return void 0!==this.edgeId()}function g(){if(!this||!this.isNode())throw Error("edgeId() is expected to be called on a node, but called on "+JSON.stringify(this));return this.data("edgeId")}"undefined"!=typeof cytoscape&&i(cytoscape),e.exports=i}])});
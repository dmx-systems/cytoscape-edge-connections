!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.cytoscapeEdgeConnections=n():e.cytoscapeEdgeConnections=n()}(window,function(){return function(e){var n={};function o(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,o),r.l=!0,r.exports}return o.m=e,o.c=n,o.d=function(e,n,t){o.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,n){if(1&n&&(e=o(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)o.d(t,r,function(n){return e[n]}.bind(null,r));return t},o.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(n,"a",n),n},o.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},o.p="",o(o.s=0)}([function(e,n){let o,t=10;function r(e){e("core","edgeConnections",d)}function d(e={}){return o=this,e.maxPasses&&(t=e.maxPasses),o.style().selector("node.aux-node").style({"background-color":"data(color)"}),o.on("position","node",e=>(function(e){e.connectedEdges().forEach(f)})(e.target)),o.on("remove","edge",e=>{const n=e.target;!function(e){const n=l(e);n&&n.remove()}(n),s(n)}),o.on("style","edge",e=>(function(e){const n=l(e);n&&n.data("color",e.style("line-color"))})(e.target)),{addEdge:i,addEdges:c,auxNode:l,isAuxNode:p,edgeId:y,edge:x}}function i(e){a(e)||console.warn(`Edge ${e.data.id} not added as source/target not in graph`,e)}function c(e){let n=0;do{if(e=e.filter(e=>!a(e)),++n===t){console.warn(e.length+" edges not added to graph due to missing source/target node (giving up after "+t+" add-edges passes)",e);break}}while(e.length)}function a(e){if(u(e,"source")&&u(e,"target"))return function(e){const n=e.midpoint(),t=o.add({classes:"aux-node",position:m(n)&&n,data:{edgeId:e.id(),color:e.style("line-color")}}).lock();e.scratch("edgeConnections",{auxNodeId:t.id()}),s(e)}(o.add(e)),!0}function u(e,n){const t=e.data[n],r=o.getElementById(t.toString());return!r.empty()&&(r.isEdge()&&(e.data[n]=function(e){const n=g(e);if(!n)throw console.error('Edge has no "auxNodeId" info',e),Error(`edge ${e.id()} has no "auxNodeId" info`);return n}(r)),!0)}function s(e){e.parallelEdges().forEach(f)}function f(e){const n=l(e);if(n){const o=e.midpoint();m(o)&&n.unlock().position(o).lock()}}function l(e){if(!e||!e.isEdge())throw console.error("Invalid auxNode() argument (edge expected):",e),Error("invalid auxNode() argument");const n=g(e);if(!n)return;const t=o.getElementById(n);if(t.empty())throw console.error("Data inconsistency: aux node of edge",e,"not in graph, auxNodeId",n),Error(`data inconsistency: aux node of edge ${e.id()} not in graph`);return t}function g(e){const n=e.scratch("edgeConnections");return n&&n.auxNodeId}function p(e){return void 0!==y(e)}function y(e){if(!e||!e.isNode())throw console.error("Invalid edgeId() argument (node expected):",e),Error("invalid edgeId() argument");return e.data("edgeId")}function x(e){const n=y(e);if(!n)throw console.error("Invalid edge() argument (aux node expected):",e),Error("invalid edge() argument");const t=o.getElementById(n);if(!t.empty())return t}function m(e){return!(isNaN(e.x)||isNaN(e.y))}e.exports=r,"undefined"!=typeof cytoscape&&r(cytoscape)}])});
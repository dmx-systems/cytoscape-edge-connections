!function(e,o){"object"==typeof exports&&"object"==typeof module?module.exports=o():"function"==typeof define&&define.amd?define([],o):"object"==typeof exports?exports.cytoscapeEdgeConnections=o():e.cytoscapeEdgeConnections=o()}(window,function(){return function(e){var o={};function t(n){if(o[n])return o[n].exports;var r=o[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=o,t.d=function(e,o,n){t.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,o){if(1&o&&(e=t(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var r in e)t.d(n,r,function(o){return e[o]}.bind(null,r));return n},t.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(o,"a",o),o},t.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},t.p="",t(t.s=0)}([function(e,o){let t,n,r;function d(e){e("core","edgeConnections",i),e("core","addEdge",a),e("core","addEdges",c),e("collection","auxNode",f),e("collection","isAuxNode",p),e("collection","edgeId",g)}function i(e={}){var o;t=e.edgeSelector||"edge",n=e.auxNodeData||(e=>({})),r=e.maxPasses||10,(o=this).on("position","node",e=>(function(e){e.connectedEdges(t).forEach(e=>{const o=e.midpoint();(function(e){return!(Number.isNaN(e.x)||Number.isNaN(e.y))})(o)&&e.auxNode().unlock().position(o).lock()})})(e.target)),o.on("remove",t,e=>(function(e){e.auxNode().remove()})(e.target))}function a(e){u(e,this)||console.warn("Edge can't be added to graph as a player does not exist",e)}function c(e){let o=0;do{if(e=e.filter(e=>!u(e,this)),++o===r)throw Error(`too many add-edges passes (limit is ${r})`)}while(e.length);console.log(`This graph needed ${o} add-edges passes`)}function u(e,o){if(s(e,"source",o)&&s(e,"target",o))return function(e,o){const t=o.source().position(),r=o.target().position(),d=e.add({position:{x:(t.x+r.x)/2,y:(t.y+r.y)/2},data:{edgeId:(i=o,Number(i.id())),...n(o)}}).lock();var i;o.data("auxNodeId",d.id())}(o,o.add(e)),!0}function s(e,o,t){const n=e.data[o],r=t.getElementById(n.toString());return!r.empty()&&(r.isEdge()&&(e.data[o]=l(r)),!0)}function f(){const e=this;if(!e||!e.isEdge())throw console.warn("auxNode() is called on",e),Error("auxNode() is not called on an edge");const o=e.cy().getElementById(l(e));if(1!==o.size())throw console.warn("No aux node for edge",e),Error(`no aux node for edge ${e.id()}`);return o}function l(e){const o=e.data("auxNodeId");if(!o)throw console.warn('Edge has no "auxNodeId" data',e),Error(`edge ${e.id()} has no "auxNodeId" data`);return o}function p(){return void 0!==this.edgeId()}function g(){const e=this;if(!e||!e.isNode())throw console.warn("edgeId() is called on",e),Error("edgeId() is not called on a node");return e.data("edgeId")}"undefined"!=typeof cytoscape&&d(cytoscape),e.exports=d}])});